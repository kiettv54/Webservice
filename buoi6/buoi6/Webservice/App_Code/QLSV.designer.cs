#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSV")]
public partial class QLSVDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertLop(Lop instance);
  partial void UpdateLop(Lop instance);
  partial void DeleteLop(Lop instance);
  partial void InsertSinhVien(SinhVien instance);
  partial void UpdateSinhVien(SinhVien instance);
  partial void DeleteSinhVien(SinhVien instance);
  #endregion
	
	public QLSVDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLSVConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public QLSVDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSVDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public QLSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Lop> Lops
	{
		get
		{
			return this.GetTable<Lop>();
		}
	}
	
	public System.Data.Linq.Table<SinhVien> SinhViens
	{
		get
		{
			return this.GetTable<SinhVien>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaLop;
	
	private string _TenLop;
	
	private System.Nullable<int> _Siso;
	
	private EntitySet<SinhVien> _SinhViens;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnSisoChanging(System.Nullable<int> value);
    partial void OnSisoChanged();
    #endregion
	
	public Lop()
	{
		this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaLop
	{
		get
		{
			return this._MaLop;
		}
		set
		{
			if ((this._MaLop != value))
			{
				this.OnMaLopChanging(value);
				this.SendPropertyChanging();
				this._MaLop = value;
				this.SendPropertyChanged("MaLop");
				this.OnMaLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenLop
	{
		get
		{
			return this._TenLop;
		}
		set
		{
			if ((this._TenLop != value))
			{
				this.OnTenLopChanging(value);
				this.SendPropertyChanging();
				this._TenLop = value;
				this.SendPropertyChanged("TenLop");
				this.OnTenLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Siso", DbType="Int")]
	public System.Nullable<int> Siso
	{
		get
		{
			return this._Siso;
		}
		set
		{
			if ((this._Siso != value))
			{
				this.OnSisoChanging(value);
				this.SendPropertyChanging();
				this._Siso = value;
				this.SendPropertyChanged("Siso");
				this.OnSisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_SinhViens", ThisKey="MaLop", OtherKey="MaLop")]
	internal EntitySet<SinhVien> SinhViens
	{
		get
		{
			return this._SinhViens;
		}
		set
		{
			this._SinhViens.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SinhViens(SinhVien entity)
	{
		this.SendPropertyChanging();
		entity.Lop = this;
	}
	
	private void detach_SinhViens(SinhVien entity)
	{
		this.SendPropertyChanging();
		entity.Lop = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaSV;
	
	private string _GioiTinh;
	
	private string _HoTen;
	
	private string _Diachi;
	
	private string _MaLop;
	
	private EntityRef<Lop> _Lop;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    #endregion
	
	public SinhVien()
	{
		this._Lop = default(EntityRef<Lop>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaSV
	{
		get
		{
			return this._MaSV;
		}
		set
		{
			if ((this._MaSV != value))
			{
				this.OnMaSVChanging(value);
				this.SendPropertyChanging();
				this._MaSV = value;
				this.SendPropertyChanged("MaSV");
				this.OnMaSVChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
	public string GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string HoTen
	{
		get
		{
			return this._HoTen;
		}
		set
		{
			if ((this._HoTen != value))
			{
				this.OnHoTenChanging(value);
				this.SendPropertyChanging();
				this._HoTen = value;
				this.SendPropertyChanged("HoTen");
				this.OnHoTenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Diachi
	{
		get
		{
			return this._Diachi;
		}
		set
		{
			if ((this._Diachi != value))
			{
				this.OnDiachiChanging(value);
				this.SendPropertyChanging();
				this._Diachi = value;
				this.SendPropertyChanged("Diachi");
				this.OnDiachiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string MaLop
	{
		get
		{
			return this._MaLop;
		}
		set
		{
			if ((this._MaLop != value))
			{
				if (this._Lop.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaLopChanging(value);
				this.SendPropertyChanging();
				this._MaLop = value;
				this.SendPropertyChanged("MaLop");
				this.OnMaLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
	public Lop Lop
	{
		get
		{
			return this._Lop.Entity;
		}
		set
		{
			Lop previousValue = this._Lop.Entity;
			if (((previousValue != value) 
						|| (this._Lop.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Lop.Entity = null;
					previousValue.SinhViens.Remove(this);
				}
				this._Lop.Entity = value;
				if ((value != null))
				{
					value.SinhViens.Add(this);
					this._MaLop = value.MaLop;
				}
				else
				{
					this._MaLop = default(string);
				}
				this.SendPropertyChanged("Lop");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
